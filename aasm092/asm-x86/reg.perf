%{ /* -*- c -*- */

/*
**    This file is part of AASM.
**
**    AASM is free software; you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation; either version 2 of the License, or
**    (at your option) any later version.
**
**    AASM is distributed in the hope that it will be useful,
**    but WITHOUT ANY WARRANTY; without even the implied warranty of
**    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**    GNU General Public License for more details.
**
**    You should have received a copy of the GNU General Public License
**    along with AASM; if not, write to the Free Software
**    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
**
**    Copyright Alexandre Becoulet, 2002
**    contact : alexandre.becoulet@free.fr
*/

/*
+options+-N asm_x86_get_reg -L ANSI-C -k* -c -D -t
*/

#include <string.h>

#include "asm_mem_table.h"
#include "asm.h"
#include "flags.h"
#include "reg_id.h"

static unsigned int	hash(const char		*str,
		  	     unsigned int	len);

struct register_s	*asm_x86_get_reg(const char	*str,
					 unsigned int	len);

%}
struct register_s
;
%%
eax,	REG_NUM_EAX,	OP_TYPE_ACCUMULATOR,	SIZE_FLAG_DWORD,	REG_ID_EAX,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_EAX
eax_,	REG_NUM_EAX,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_EAX,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_EAX
ecx,	REG_NUM_ECX,	OP_TYPE_COUNTER,	SIZE_FLAG_DWORD,	REG_ID_ECX,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_ECX
edx,	REG_NUM_EDX,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_EDX,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_EDX
ebx,	REG_NUM_EBX,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_EBX,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_EBX
esp,	REG_NUM_ESP,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_ESP,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_ESP
ebp,	REG_NUM_EBP,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_EBP,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_EBP
esi,	REG_NUM_ESI,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_ESI,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_ESI
edi,	REG_NUM_EDI,	OP_TYPE_GENERAL,	SIZE_FLAG_DWORD,	REG_ID_EDI,	REG_DWORD_PART,		X86_MEM_BASE_PRESENT | REG_NUM_EDI
ax,	REG_NUM_AX,	OP_TYPE_ACCUMULATOR,	SIZE_FLAG_WORD,	REG_ID_AX,	REG_WORD_LO_PART,	0
ax_,	REG_NUM_AX,	OP_TYPE_GENERAL,	SIZE_FLAG_WORD,	REG_ID_AX,	REG_WORD_LO_PART,	0
cx,	REG_NUM_CX,	OP_TYPE_COUNTER,	SIZE_FLAG_WORD,	REG_ID_CX,	REG_WORD_LO_PART,	0
dx,	REG_NUM_DX,	OP_TYPE_DATA,	SIZE_FLAG_WORD,	REG_ID_DX,	REG_WORD_LO_PART,	0
bx,	REG_NUM_BX,	OP_TYPE_GENERAL,	SIZE_FLAG_WORD,	REG_ID_BX,	REG_WORD_LO_PART,	X86_MEM_BASE_PRESENT | REG_NUM_BX | X86_MEM_BASE_WORD
sp,	REG_NUM_SP,	OP_TYPE_GENERAL,	SIZE_FLAG_WORD,	REG_ID_SP,	REG_WORD_LO_PART,	0
bp,	REG_NUM_BP,	OP_TYPE_GENERAL,	SIZE_FLAG_WORD,	REG_ID_BP,	REG_WORD_LO_PART,	X86_MEM_BASE_PRESENT | REG_NUM_BP | X86_MEM_BASE_WORD
si,	REG_NUM_SI,	OP_TYPE_GENERAL,	SIZE_FLAG_WORD,	REG_ID_SI,	REG_WORD_LO_PART,	X86_MEM_BASE_PRESENT | REG_NUM_SI | X86_MEM_BASE_WORD
di,	REG_NUM_DI,	OP_TYPE_GENERAL,	SIZE_FLAG_WORD,	REG_ID_DI,	REG_WORD_LO_PART,	X86_MEM_BASE_PRESENT | REG_NUM_DI | X86_MEM_BASE_WORD
al,	REG_NUM_AL,	OP_TYPE_ACCUMULATOR,	SIZE_FLAG_BYTE,	REG_ID_AL,	REG_BYTE_LO_PART,	0
al_,	REG_NUM_AL,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_AL,	REG_BYTE_LO_PART,	0
cl,	REG_NUM_CL,	OP_TYPE_COUNTER,	SIZE_FLAG_BYTE,	REG_ID_CL,	REG_BYTE_LO_PART,	0
dl,	REG_NUM_DL,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_DL,	REG_BYTE_LO_PART,	0
bl,	REG_NUM_BL,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_BL,	REG_BYTE_LO_PART,	0
ah,	REG_NUM_AH,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_AH,	REG_BYTE_HI_PART,	0
ch,	REG_NUM_CH,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_CH,	REG_BYTE_HI_PART,	0
dh,	REG_NUM_DH,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_DH,	REG_BYTE_HI_PART,	0
bh,	REG_NUM_BH,	OP_TYPE_GENERAL,	SIZE_FLAG_BYTE,	REG_ID_BH,	REG_BYTE_HI_PART,	0
es,	REG_NUM_ES,	OP_TYPE_SEG_OLD,	SIZE_FLAG_WORD,	REG_ID_ES,	1,			0
cs,	REG_NUM_CS,	OP_TYPE_SEG_CS,	SIZE_FLAG_WORD,	REG_ID_CS,	1,			0
ss,	REG_NUM_SS,	OP_TYPE_SEG_OLD,	SIZE_FLAG_WORD,	REG_ID_SS,	1,			0
ds,	REG_NUM_DS,	OP_TYPE_SEG_OLD,	SIZE_FLAG_WORD,	REG_ID_DS,	1,			0
fs,	REG_NUM_FS,	OP_TYPE_SEG_NEW,	SIZE_FLAG_WORD,	REG_ID_FS,	1,			0
gs,	REG_NUM_GS,	OP_TYPE_SEG_NEW,	SIZE_FLAG_WORD,	REG_ID_GS,	1,			0
mm0,	REG_NUM_MM0,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM0,	1,			0
mm1,	REG_NUM_MM1,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM1,	1,			0
mm2,	REG_NUM_MM2,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM2,	1,			0
mm3,	REG_NUM_MM3,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM3,	1,			0
mm4,	REG_NUM_MM4,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM4,	1,			0
mm5,	REG_NUM_MM5,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM5,	1,			0
mm6,	REG_NUM_MM6,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM6,	1,			0
mm7,	REG_NUM_MM7,	OP_TYPE_MMX,		SIZE_FLAG_QWORD,	REG_ID_MM7,	1,			0
xmm0,	REG_NUM_XMM0,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM0,	1,			0
xmm1,	REG_NUM_XMM1,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM1,	1,			0
xmm2,	REG_NUM_XMM2,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM2,	1,			0
xmm3,	REG_NUM_XMM3,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM3,	1,			0
xmm4,	REG_NUM_XMM4,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM4,	1,			0
xmm5,	REG_NUM_XMM5,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM5,	1,			0
xmm6,	REG_NUM_XMM6,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM6,	1,			0
xmm7,	REG_NUM_XMM7,	OP_TYPE_SSE,		SIZE_FLAG_OWORD,	REG_ID_XMM7,	1,			0
st0,	REG_NUM_ST0,	OP_TYPE_FPU_TOP,	SIZE_FLAG_TWORD,	REG_ID_ST0,	1,			0
st1,	REG_NUM_ST1,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST1,	1,			0
st2,	REG_NUM_ST2,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST2,	1,			0
st3,	REG_NUM_ST3,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST3,	1,			0
st4,	REG_NUM_ST4,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST4,	1,			0
st5,	REG_NUM_ST5,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST5,	1,			0
st6,	REG_NUM_ST6,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST6,	1,			0
st7,	REG_NUM_ST7,	OP_TYPE_FPU,		SIZE_FLAG_TWORD,	REG_ID_ST7,	1,			0
cr0,	REG_NUM_CR0,	OP_TYPE_CONTROL,	SIZE_FLAG_DWORD,	REG_ID_CR0,	1,			0
cr2,	REG_NUM_CR2,	OP_TYPE_CONTROL,	SIZE_FLAG_DWORD,	REG_ID_CR2,	1,			0
cr3,	REG_NUM_CR3,	OP_TYPE_CONTROL,	SIZE_FLAG_DWORD,	REG_ID_CR3,	1,			0
cr4,	REG_NUM_CR4,	OP_TYPE_CONTROL,	SIZE_FLAG_DWORD,	REG_ID_CR4,	1,			0
dr0,	REG_NUM_DR0,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR0,	1,			0
dr1,	REG_NUM_DR1,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR1,	1,			0
dr2,	REG_NUM_DR2,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR2,	1,			0
dr3,	REG_NUM_DR3,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR3,	1,			0
dr4,	REG_NUM_DR4,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR4,	1,			0
dr5,	REG_NUM_DR5,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR5,	1,			0
dr6,	REG_NUM_DR6,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR6,	1,			0
dr7,	REG_NUM_DR7,	OP_TYPE_DEBUG,	SIZE_FLAG_DWORD,	REG_ID_DR7,	1,			0
%%

unsigned int	asm_x86_reg_size(const struct register_s	*reg)
{
  return (reg->r_size);
}

const char	*asm_x86_reg_name(const struct register_s	*reg)
{
  return (reg->name);
}

